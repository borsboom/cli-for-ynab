/* 
 * YNAB API Endpoints
 *
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.youneedabudget.com
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use hyper;

pub struct Configuration<C: hyper::client::Connect> {
  pub base_path: String,
  // @@@ WOULD BE GOOD TO SUPPORT OAUTH TOO
  pub auth_header: hyper::header::Authorization<hyper::header::Bearer>,
  pub client: hyper::client::Client<C>,
}

impl<C: hyper::client::Connect> Configuration<C> {
  pub fn new(access_token: String, client: hyper::client::Client<C>) -> Configuration<C> {
    Configuration {
      base_path: "https://api.youneedabudget.com/v1".to_owned(),
      auth_header: hyper::header::Authorization(
        hyper::header::Bearer {
          token: access_token.to_owned()
        }
      ),
      client: client,
    }
  }

  // @@@ NOT REALLY SURE IF THIS IS THE BEST PLACE, BUT TRYING TO KEEP CHANGES LOCALIZED
  pub fn new_request(&self, method: hyper::Method, uri: hyper::Uri) -> hyper::Request {
  	let mut req = hyper::Request::new(method, uri);
    req.headers_mut().set(self.auth_header.to_owned());
    req
  }
}
