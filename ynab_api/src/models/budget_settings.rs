/* 
 * YNAB API Endpoints
 *
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.youneedabudget.com
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct BudgetSettings {
  #[serde(rename = "date_format")]
  date_format: ::models::DateFormat,
  #[serde(rename = "currency_format")]
  currency_format: ::models::CurrencyFormat
}

impl BudgetSettings {
  pub fn new(date_format: ::models::DateFormat, currency_format: ::models::CurrencyFormat) -> BudgetSettings {
    BudgetSettings {
      date_format: date_format,
      currency_format: currency_format
    }
  }

  pub fn set_date_format(&mut self, date_format: ::models::DateFormat) {
    self.date_format = date_format;
  }

  pub fn with_date_format(mut self, date_format: ::models::DateFormat) -> BudgetSettings {
    self.date_format = date_format;
    self
  }

  pub fn date_format(&self) -> &::models::DateFormat {
    &self.date_format
  }


  pub fn set_currency_format(&mut self, currency_format: ::models::CurrencyFormat) {
    self.currency_format = currency_format;
  }

  pub fn with_currency_format(mut self, currency_format: ::models::CurrencyFormat) -> BudgetSettings {
    self.currency_format = currency_format;
    self
  }

  pub fn currency_format(&self) -> &::models::CurrencyFormat {
    &self.currency_format
  }


}



